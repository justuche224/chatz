generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id               String       @id @default(cuid())
  firstname        String
  lastname         String
  username         String       @unique
  email            String       @unique
  emailVerified    DateTime?
  image            String?
  password         String
  role             UserRole     @default(USER)
  posts            Post[]
  sentRequests     Friendship[] @relation("FriendshipRequests")
  receivedRequests Friendship[] @relation("FriendshipResponses")
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
}

model Friendship {
  id          String           @id @default(cuid())
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  requester   User             @relation("FriendshipRequests", fields: [requesterId], references: [id])
  requesterId String
  addressee   User             @relation("FriendshipResponses", fields: [addresseeId], references: [id])
  addresseeId String
  status      FriendshipStatus @default(PENDING)
}

enum FriendshipStatus {
  PENDING
  ACCEPTED
  DECLINED
  BLOCKED
}

model Post {
  id        String  @id @default(cuid())
  title     String
  content   String
  published Boolean @default(false)
  author    User    @relation(fields: [authorId], references: [id])
  authorId  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}
